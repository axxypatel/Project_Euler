# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
from math import sqrt


def is_pentagonal_number(tep_numb):
    delta_numb = 1 + (24 * tep_numb)
    delta_numb = sqrt(delta_numb)
    if delta_numb.is_integer():
        delta_numb = int(1 + delta_numb)
        if delta_numb % 6 == 0:
            return True
    return False


def find_pentagonal_number():
    for i in range(1, 5001):
        pi = int(i * ((3 * i) - 1) / 2)
        for j in range(i, 5001):
            pj = int(j * ((3 * j) - 1) / 2)
            if is_pentagonal_number(pi+pj) and is_pentagonal_number(abs(pj-pi)):
                print("Value of D:", abs(pj-pi))
                return


find_pentagonal_number()
